#This file builds the Docker images for a React/NodeJS application and runs it as microservices on Docker containers

#To ensure successful execution, clone this entire repository and execute this file while in the root folder of the cloned repository

#It's also a requirement to have Docker and the docker-compose plugin installed in your environment

#To launch this app without having to clone the entire repository,use the docker-compose.yaml file to run the app

version: "3.8"

services:

  #Builds the frontend Docker image and creates the frontend microservice
  monica-yolo-client:
  # versioning through semver conventioning
    image: monicamwangi/yolo-client:v1.0.0
    build: ./client
    container_name: monica-yolo-client
    stdin_open: true
    tty: true
    ports:
      - "3000:3000"
    depends_on: 
      - monica-yolo-backend
    networks:
      - app-net

  #Builds the backend Docker image and creates the backend microservice
  monica-yolo-backend:
    # versioning through semver conventioning
    image: monicamwangi/yolo-backend:v1.0.0
    build: ./backend
    container_name: monica-yolo-backend
    stdin_open: true
    tty: true
    restart: always
    ports:
      - "5000:5000"
      #added an environment for the mongo db 
    environment:
      - MONGO_URI=mongodb+srv://mwangimonica123_db_user:Njeri41396019!@clusterip.k56ypyq.mongodb.net/?retryWrites=true&w=majority&appName=ClusterIP
    depends_on: 
      - app-mongo
    networks:
      - app-net

  #Creates the database microservice
  app-mongo:
    image: mongo
    container_name: app-mongo
    ports:
      - "27017:27017"
    networks:
      - app-net
    volumes:
      - type: volume
        source: app-mongo-data
        target: /data/db

#Creates the network infrastructure necessary for the containers to communicate with each other
networks:
  app-net:
    name: app-net
    driver: bridge
    attachable: true
    ipam:
      config:
        - subnet: 172.20.0.0/16 
          ip_range: 172.20.0.0/16

#Creates a Docker volume that persists all the data stored in the database
volumes:
  app-mongo-data:
    driver: local
